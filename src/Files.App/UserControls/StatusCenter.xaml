<!--  Copyright (c) 2023 Files Community. Licensed under the MIT License. See the LICENSE.  -->
<UserControl
	x:Class="Files.App.UserControls.StatusCenter"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:animatedvisuals="using:Microsoft.UI.Xaml.Controls.AnimatedVisuals"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:helpers="using:Files.App.Helpers"
	xmlns:livecharts2="using:LiveChartsCore.SkiaSharpView.WinUI"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:statuscenter="using:Files.App.Utils.StatusCenter"
	xmlns:uc="using:Files.App.UserControls"
	xmlns:wcttriggers="using:CommunityToolkit.WinUI.UI.Triggers"
	mc:Ignorable="d">

	<UserControl.Resources>
		<ResourceDictionary>
			<ResourceDictionary.MergedDictionaries>
				<ResourceDictionary Source="ms-appx:///ResourceDictionaries/StatusCenterStyles.xaml" />
				<ResourceDictionary>

					<DataTemplate x:Name="StatusCenterItemCardStyleDataTemplate" x:DataType="statuscenter:StatusCenterItem">
						<UserControl>
							<Grid
								x:Name="ContentRoot"
								Padding="8,8,8,8"
								HorizontalAlignment="Stretch"
								AutomationProperties.Name="{x:Bind Header, Mode=OneWay}"
								Background="{StaticResource CardBackgroundFillColorDefaultBrush}"
								BorderBrush="{ThemeResource CardStrokeColorDefaultBrush}"
								BorderThickness="1"
								CornerRadius="{StaticResource OverlayCornerRadius}">
								<Grid.RowDefinitions>
									<RowDefinition Height="Auto" />
									<RowDefinition Height="Auto" />
									<RowDefinition Height="Auto" />
								</Grid.RowDefinitions>

								<Grid.Transitions>
									<TransitionCollection>
										<RepositionThemeTransition />
									</TransitionCollection>
								</Grid.Transitions>

								<!--  Header  -->
								<Grid x:Name="StatusCenterItemHeaderPanel" Grid.Row="0">
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="Auto" />
										<ColumnDefinition Width="*" />
										<ColumnDefinition Width="Auto" />
									</Grid.ColumnDefinitions>

									<!--  Header Icon  -->
									<Grid Grid.Column="0">

										<!--  Circle Icon 32x32  -->
										<TextBlock
											x:Name="SeverityBackgroundFontIcon"
											HorizontalAlignment="Center"
											VerticalAlignment="Center"
											FontFamily="{ThemeResource SymbolThemeFontFamily}"
											FontSize="32"
											Text="&#xE91F;" />

										<!--  State Icon 16x16  -->
										<PathIcon
											x:Name="SeverityForegroundPathIcon"
											Width="16"
											Height="16"
											HorizontalAlignment="Center"
											VerticalAlignment="Center" />

									</Grid>

									<!--  Header Title & Description  -->
									<StackPanel
										x:Name="StatusCenterItemHeadedrPanel"
										Grid.Column="1"
										Margin="12,0"
										VerticalAlignment="Center">

										<TextBlock
											x:Name="StatusCenterItemHeaderTextBlock"
											x:Load="{x:Bind Header, Converter={StaticResource EmptyStringToBoolConverter}, Mode=OneWay}"
											MaxLines="1"
											Style="{StaticResource BodyTextBlockStyle}"
											Text="{x:Bind Header, Mode=OneWay}"
											TextTrimming="CharacterEllipsis"
											TextWrapping="NoWrap" />

									</StackPanel>

									<!--  Action Buttons  -->
									<StackPanel Grid.Column="2" VerticalAlignment="Center">

										<!--  Dismiss Item  -->
										<Button
											x:Name="CloseItemButton"
											Width="32"
											Height="32"
											Padding="0"
											x:Load="{x:Bind IsInProgress, Converter={StaticResource BoolNegationConverter}, Mode=OneWay}"
											AutomationProperties.Name="{helpers:ResourceString Name=Clear}"
											Background="Transparent"
											BorderBrush="Transparent"
											Click="CloseItemButton_Click"
											ToolTipService.ToolTip="{helpers:ResourceString Name=Clear}">
											<Button.Content>
												<FontIcon FontSize="16" Glyph="&#xE711;" />
											</Button.Content>
										</Button>

										<!--  Expand & Collapse Chevron  -->
										<ToggleButton
											x:Name="ExpandCollapseChevronItemButton"
											Width="32"
											Height="32"
											Padding="0"
											x:Load="{x:Bind IsInProgress, Mode=OneWay}"
											Background="Transparent"
											BorderBrush="Transparent"
											IsChecked="{x:Bind IsExpanded, Mode=TwoWay}">
											<AnimatedIcon
												x:Name="ExpandCollapseChevron"
												Width="16"
												Height="16"
												HorizontalAlignment="Center"
												VerticalAlignment="Center"
												AnimatedIcon.State="{x:Bind AnimatedIconState, Mode=OneWay}"
												AutomationProperties.AccessibilityView="Raw"
												RenderTransformOrigin="0.5, 0.5">
												<animatedvisuals:AnimatedChevronUpDownSmallVisualSource />
												<AnimatedIcon.FallbackIconSource>
													<FontIconSource
														FontFamily="{StaticResource SymbolThemeFontFamily}"
														FontSize="16"
														Glyph="{StaticResource ExpanderChevronDownGlyph}"
														IsTextScaleFactorEnabled="False" />
												</AnimatedIcon.FallbackIconSource>
											</AnimatedIcon>
										</ToggleButton>

									</StackPanel>

								</Grid>

								<!--  Progress & Footer  -->
								<Grid
									x:Name="StatusCenterItemRichProgressDisplayPanel"
									Grid.Row="1"
									Margin="0,8,0,8"
									ColumnSpacing="4"
									Visibility="{x:Bind IsInProgress, Converter={StaticResource BoolToVisibilityConverter}, Mode=OneWay}">
									<Grid.RowDefinitions>
										<RowDefinition Height="Auto" />
										<RowDefinition Height="Auto" />
									</Grid.RowDefinitions>
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="*" />
										<ColumnDefinition Width="Auto" />
									</Grid.ColumnDefinitions>

									<!--  Extended ProgressBar  -->
									<ProgressBar
										x:Name="MainProgressBar"
										Margin="4,4,4,4"
										VerticalAlignment="Top"
										IsIndeterminate="{x:Bind IsCancelled, Mode=OneWay}"
										Visibility="{x:Bind IsExpanded, Converter={StaticResource NegateBoolToVisibilityConverter}, Mode=OneWay}"
										Value="{x:Bind ProgressPercentage, Mode=OneWay}" />

									<!--  Graph  -->
									<Border
										x:Name="MainGraphCartesianChartClipGrid"
										Height="72"
										Margin="4,4,4,12"
										VerticalAlignment="Top"
										BorderBrush="{ThemeResource ControlStrongStrokeColorDefaultBrush}"
										BorderThickness="1"
										CornerRadius="4"
										Visibility="{x:Bind IsExpanded, Converter={StaticResource BoolToVisibilityConverter}, Mode=OneWay}">

										<Grid>
											<ProgressBar
												x:Name="SecondaryProgressBar"
												Height="70"
												MinHeight="70"
												VerticalAlignment="Stretch"
												CornerRadius="4,0,0,4"
												IsIndeterminate="{x:Bind IsCancelled, Mode=OneWay}"
												Style="{StaticResource CustomProgressBarStyle}"
												Visibility="{x:Bind IsExpanded, Converter={StaticResource BoolToVisibilityConverter}, Mode=OneWay}"
												Value="{x:Bind ProgressPercentage, Mode=OneWay}" />

											<livecharts2:CartesianChart
												x:Name="MainCartesianChart"
												Height="48"
												Margin="0,-2"
												VerticalAlignment="Bottom"
												AnimationsSpeed="00:00:00.001"
												Series="{x:Bind Series, Mode=OneWay}"
												TooltipPosition="Hidden"
												XAxes="{x:Bind XAxes}"
												YAxes="{x:Bind YAxes}" />

											<StackPanel Margin="8,4">

												<TextBlock
													x:Name="OperationSpeedStringTextBlock"
													HorizontalAlignment="Right"
													VerticalAlignment="Top"
													FontSize="10"
													Foreground="{ThemeResource TextFillColorSecondaryBrush}"
													Style="{StaticResource CaptionTextBlockStyle}"
													Text="Speed:" />

												<TextBlock
													x:Name="OperationSpeedPerSecTextBlock"
													HorizontalAlignment="Right"
													VerticalAlignment="Top"
													FontSize="13"
													Style="{StaticResource BodyStrongTextBlockStyle}"
													Text="{x:Bind SpeedText, Mode=OneWay}" />

											</StackPanel>
										</Grid>

									</Border>

									<!--  Footer  -->
									<Grid
										Grid.Row="1"
										Margin="4,0"
										VerticalAlignment="Top">

										<!--  SubFooter (Displayed When Graph Expanded)  -->
										<TextBlock
											x:Name="StatusCenterItemSubFooterTextBlock"
											x:Load="{x:Bind ProgressOverviewText, Converter={StaticResource EmptyStringToBoolConverter}, Mode=OneWay}"
											Foreground="{ThemeResource TextFillColorSecondaryBrush}"
											MaxLines="1"
											Style="{StaticResource CaptionTextBlockStyle}"
											Text="{x:Bind ProgressOverviewText, Mode=OneWay}"
											TextTrimming="CharacterEllipsis"
											TextWrapping="NoWrap"
											ToolTipService.ToolTip="{x:Bind ProgressOverviewText, Mode=OneWay}"
											Visibility="{x:Bind IsSubFooterVisible, Converter={StaticResource BoolToVisibilityConverter}, Mode=OneWay}" />

										<!--  Detailed Info (Displayed When Graph Collapsed)  -->
										<StackPanel Spacing="2" Visibility="{x:Bind IsSubFooterVisible, Converter={StaticResource NegateBoolToVisibilityConverter}, Mode=OneWay}">

											<TextBlock
												x:Name="StatusCenterItemCurrentProcessingItemNameTextBlock"
												x:Load="{x:Bind CurrentProcessingItemNameText, Converter={StaticResource EmptyStringToBoolConverter}, Mode=OneWay}"
												MaxLines="1"
												Style="{StaticResource BodyTextBlockStyle}"
												TextTrimming="CharacterEllipsis"
												TextWrapping="NoWrap"
												ToolTipService.ToolTip="{x:Bind CurrentProcessingItemNameText, Mode=OneWay}">
												<Run Text="{helpers:ResourceString Name=NameWithColon}" />
												<Run Text="{x:Bind CurrentProcessingItemNameText, Mode=OneWay}" />
											</TextBlock>

											<TextBlock
												x:Name="StatusCenterItemProcessedBytesAndProgressTextBlock"
												x:Load="{x:Bind CurrentProcessedSizeText, Converter={StaticResource EmptyStringToBoolConverter}, Mode=OneWay}"
												Foreground="{ThemeResource TextFillColorSecondaryBrush}"
												MaxLines="1"
												Style="{StaticResource CaptionTextBlockStyle}"
												TextTrimming="CharacterEllipsis"
												TextWrapping="NoWrap"
												Visibility="{x:Bind IsExpanded, Converter={StaticResource BoolToVisibilityConverter}, Mode=OneWay}">
												<Run Text="{x:Bind CurrentProcessedSizeText, Mode=OneWay}" />
												<Run Text="-" />
												<Run Text="{x:Bind ProgressPercentageText, Mode=OneWay}" />
											</TextBlock>

										</StackPanel>

									</Grid>

									<!--  Action Buttons  -->
									<Grid
										Grid.RowSpan="2"
										Grid.Column="1"
										VerticalAlignment="Top">

										<Button
											x:Name="CancelItemButton"
											Width="32"
											Height="32"
											Padding="0"
											x:Load="{x:Bind IsCancelable, Mode=OneWay}"
											AutomationProperties.Name="{helpers:ResourceString Name=Cancel}"
											Background="Transparent"
											BorderBrush="Transparent"
											Command="{x:Bind CancelCommand}"
											DataContext="{x:Bind}"
											IsEnabled="{x:Bind IsCancelled, Mode=OneWay, Converter={StaticResource BoolNegationConverter}}"
											ToolTipService.ToolTip="{helpers:ResourceString Name=Cancel}"
											Visibility="{x:Bind IsInProgress, Converter={StaticResource BoolToVisibilityConverter}, Mode=OneWay}">
											<Button.Content>
												<FontIcon FontSize="16" Glyph="&#xE711;" />
											</Button.Content>
										</Button>

									</Grid>

								</Grid>

								<VisualStateManager.VisualStateGroups>
									<VisualStateGroup x:Name="ThemeColorStates">
										<VisualState x:Name="InProgressState">
											<VisualState.StateTriggers>
												<wcttriggers:IsEqualStateTrigger Value="{x:Bind ItemKind, Converter={StaticResource EnumToStringConverter}, Mode=OneWay}" To="InProgress" />
											</VisualState.StateTriggers>
											<VisualState.Setters>
												<Setter Target="SeverityBackgroundFontIcon.Foreground" Value="{ThemeResource AccentFillColorDefaultBrush}" />
												<Setter Target="SeverityBackgroundFontIcon.Opacity" Value="0.1" />
												<Setter Target="SeverityForegroundPathIcon.Foreground" Value="{ThemeResource AccentFillColorDefaultBrush}" />
											</VisualState.Setters>
										</VisualState>
										<VisualState x:Name="SuccessfulState">
											<VisualState.StateTriggers>
												<wcttriggers:IsEqualStateTrigger Value="{x:Bind ItemKind, Converter={StaticResource EnumToStringConverter}, Mode=OneWay}" To="Successful" />
											</VisualState.StateTriggers>
											<VisualState.Setters>
												<Setter Target="SeverityBackgroundFontIcon.Foreground" Value="{ThemeResource SystemFillColorSuccessBackgroundBrush}" />
												<Setter Target="SeverityForegroundPathIcon.Foreground" Value="{ThemeResource SystemFillColorSuccessBrush}" />
											</VisualState.Setters>
										</VisualState>
										<VisualState x:Name="ErrorState">
											<VisualState.StateTriggers>
												<wcttriggers:IsEqualStateTrigger Value="{x:Bind ItemKind, Converter={StaticResource EnumToStringConverter}, Mode=OneWay}" To="Error" />
											</VisualState.StateTriggers>
											<VisualState.Setters>
												<Setter Target="SeverityBackgroundFontIcon.Foreground" Value="{ThemeResource SystemFillColorCriticalBackgroundBrush}" />
												<Setter Target="SeverityForegroundPathIcon.Foreground" Value="{ThemeResource SystemFillColorCriticalBrush}" />
											</VisualState.Setters>
										</VisualState>
									</VisualStateGroup>
									<VisualStateGroup x:Name="IconStates">
										<VisualState x:Name="CopyIconState">
											<VisualState.StateTriggers>
												<wcttriggers:IsEqualStateTrigger Value="{x:Bind ItemIconKind, Converter={StaticResource EnumToStringConverter}, Mode=OneWay}" To="Copy" />
											</VisualState.StateTriggers>
											<VisualState.Setters>
												<Setter Target="SeverityForegroundPathIcon.Data" Value="{StaticResource App.Theme.PathIcon.ActionCopy}" />
											</VisualState.Setters>
										</VisualState>
										<VisualState x:Name="MoveIconState">
											<VisualState.StateTriggers>
												<wcttriggers:IsEqualStateTrigger Value="{x:Bind ItemIconKind, Converter={StaticResource EnumToStringConverter}, Mode=OneWay}" To="Move" />
											</VisualState.StateTriggers>
											<VisualState.Setters>
												<Setter Target="SeverityForegroundPathIcon.Data" Value="{StaticResource App.Theme.PathIcon.ActionMove}" />
											</VisualState.Setters>
										</VisualState>
										<VisualState x:Name="DeleteIconState">
											<VisualState.StateTriggers>
												<wcttriggers:IsEqualStateTrigger Value="{x:Bind ItemIconKind, Converter={StaticResource EnumToStringConverter}, Mode=OneWay}" To="Delete" />
											</VisualState.StateTriggers>
											<VisualState.Setters>
												<Setter Target="SeverityForegroundPathIcon.Data" Value="{StaticResource App.Theme.PathIcon.ActionDelete}" />
											</VisualState.Setters>
										</VisualState>
										<VisualState x:Name="RecycleIconState">
											<VisualState.StateTriggers>
												<wcttriggers:IsEqualStateTrigger Value="{x:Bind ItemIconKind, Converter={StaticResource EnumToStringConverter}, Mode=OneWay}" To="Recycle" />
											</VisualState.StateTriggers>
											<VisualState.Setters>
												<Setter Target="SeverityForegroundPathIcon.Data" Value="{StaticResource App.Theme.PathIcon.ActionDelete}" />
											</VisualState.Setters>
										</VisualState>
										<VisualState x:Name="ExtractIconState">
											<VisualState.StateTriggers>
												<wcttriggers:IsEqualStateTrigger Value="{x:Bind ItemIconKind, Converter={StaticResource EnumToStringConverter}, Mode=OneWay}" To="Extract" />
											</VisualState.StateTriggers>
											<VisualState.Setters>
												<Setter Target="SeverityForegroundPathIcon.Data" Value="{StaticResource App.Theme.PathIcon.ActionCopy}" />
											</VisualState.Setters>
										</VisualState>
										<VisualState x:Name="SuccessfulIconState">
											<VisualState.StateTriggers>
												<wcttriggers:IsEqualStateTrigger Value="{x:Bind ItemIconKind, Converter={StaticResource EnumToStringConverter}, Mode=OneWay}" To="Successful" />
											</VisualState.StateTriggers>
											<VisualState.Setters>
												<Setter Target="SeverityForegroundPathIcon.Data" Value="{StaticResource App.Theme.PathIcon.ActionSuccess}" />
											</VisualState.Setters>
										</VisualState>
										<VisualState x:Name="ErrorIconState">
											<VisualState.StateTriggers>
												<wcttriggers:IsEqualStateTrigger Value="{x:Bind ItemIconKind, Converter={StaticResource EnumToStringConverter}, Mode=OneWay}" To="Error" />
											</VisualState.StateTriggers>
											<VisualState.Setters>
												<Setter Target="SeverityForegroundPathIcon.Data" Value="{StaticResource App.Theme.PathIcon.ActionInfo}" />
											</VisualState.Setters>
										</VisualState>
									</VisualStateGroup>
								</VisualStateManager.VisualStateGroups>
							</Grid>
						</UserControl>
					</DataTemplate>

				</ResourceDictionary>
			</ResourceDictionary.MergedDictionaries>
		</ResourceDictionary>
	</UserControl.Resources>

	<Grid x:Name="RootGrid">
		<Grid.RowDefinitions>
			<RowDefinition Height="Auto" />
			<RowDefinition Height="*" />
		</Grid.RowDefinitions>

		<!--  Header  -->
		<Grid x:Name="HeaderGrid" Padding="12,12,12,12">

			<!--  Header Texts  -->
			<TextBlock
				VerticalAlignment="Center"
				FontSize="14"
				Style="{StaticResource BodyStrongTextBlockStyle}"
				Text="{helpers:ResourceString Name=StatusCenter}" />

			<!--  Remove All Cards Button  -->
			<Button
				x:Name="CloseAllItemsButton"
				Height="24"
				Padding="8,0"
				HorizontalAlignment="Right"
				Click="CloseAllItemsButton_Click"
				Content="{helpers:ResourceString Name=ClearCompleted}"
				FontSize="12"
				IsEnabled="{x:Bind ViewModel.HasAnyItem, Mode=OneWay}" />

		</Grid>

		<!--  Status Center Items  -->
		<ListView
			x:Name="StatusCenterItemsListView"
			Grid.Row="1"
			Padding="12,0,12,12"
			VerticalAlignment="Stretch"
			ItemTemplate="{StaticResource StatusCenterItemCardStyleDataTemplate}"
			ItemsSource="{x:Bind ViewModel.StatusCenterItems, Mode=OneWay}"
			ScrollViewer.VerticalScrollBarVisibility="Auto"
			ScrollViewer.VerticalScrollMode="Enabled"
			SelectionMode="None">

			<!--  Item Style  -->
			<ListView.ItemContainerStyle>
				<Style BasedOn="{StaticResource DefaultListViewItemStyle}" TargetType="ListViewItem">
					<Setter Property="Margin" Value="0,2,0,2" />
					<Setter Property="Padding" Value="0,0,0,0" />
				</Style>
			</ListView.ItemContainerStyle>

		</ListView>

		<TextBlock
			x:Name="NoItemsMessageTextBlock"
			Grid.Row="1"
			HorizontalAlignment="Center"
			VerticalAlignment="Center"
			x:Load="{x:Bind ViewModel.HasAnyItem, Converter={StaticResource BoolNegationConverter}, Mode=OneWay}"
			Text="No items here." />

	</Grid>
</UserControl>
