<Page
    x:Class="Files.GenericFileBrowser"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="using:Microsoft.Toolkit.Uwp.UI.Controls"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:local="using:Files"
    xmlns:local1="using:Navigation"
    xmlns:local2="using:ItemListPresenter"
    xmlns:local3="using:Interacts"
    Name="GenericItemView"
    mc:Ignorable="d" ScrollViewer.HorizontalScrollBarVisibility="Hidden" ScrollViewer.VerticalScrollBarVisibility="Auto">

    <Page.Resources>
        <AcrylicBrush x:Key="RegAcrylic" BackgroundSource="HostBackdrop" TintColor="White" TintOpacity="0.7" FallbackColor="{StaticResource SystemChromeMediumColor}"/>
        <AcrylicBrush x:Key="InAppAcrylic" BackgroundSource="Backdrop" TintColor="{StaticResource SystemAccentColor}" TintOpacity="0.6" FallbackColor="{ThemeResource SystemChromeMediumColor}"/>
        <AcrylicBrush x:Key="LightAcrylic" BackgroundSource="HostBackdrop" TintColor="White" TintOpacity="0.8" FallbackColor="{StaticResource SystemChromeMediumColor}"/>
        <SolidColorBrush x:Key="GreyFallback" Color="{StaticResource SystemChromeMediumColor}"/>
        <SolidColorBrush x:Key="Accent" Color="{StaticResource SystemAccentColor}"/>
        <Storyboard x:Name="PointerHoverButton1">
            <FadeOutThemeAnimation Storyboard.TargetName="Shadow1"/>

        </Storyboard>
        <local1:BackState x:Key="BackObject"/>
        <local1:ForwardState x:Key="ForwardObject"/>
        <Style x:Key="BaseTextBlockStyle" TargetType="TextBlock">
            <Setter Property="FontFamily" Value="XamlAutoFontFamily"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="TextTrimming" Value="None"/>
            <Setter Property="TextWrapping" Value="Wrap"/>
            <Setter Property="LineStackingStrategy" Value="MaxHeight"/>
            <Setter Property="TextLineBounds" Value="Full"/>
        </Style>
        <Style x:Key="CaptionTextBlockStyle" BasedOn="{StaticResource BaseTextBlockStyle}" TargetType="TextBlock">
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="FontWeight" Value="Normal"/>
        </Style>
        <Style x:Key="AppBarButtonFixedStyle" TargetType="AppBarButton">
            <Setter Property="Background" Value="{ThemeResource AppBarButtonRevealBackground}"/>
            <Setter Property="Foreground" Value="{ThemeResource AppBarButtonForeground}"/>
            <Setter Property="BorderBrush" Value="{ThemeResource AppBarButtonRevealBorderBrush}"/>
            <Setter Property="BorderThickness" Value="{ThemeResource AppBarButtonRevealBorderThemeThickness}"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}"/>
            <Setter Property="FontWeight" Value="Normal"/>
            <Setter Property="Width" Value="50"/>
            <Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}"/>
            <Setter Property="AllowFocusOnInteraction" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="AppBarButton">
                        <Grid x:Name="Root" Background="{TemplateBinding Background}" CornerRadius="{TemplateBinding CornerRadius}" MinWidth="{TemplateBinding MinWidth}" Margin="0,0" MaxWidth="{TemplateBinding MaxWidth}">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="ApplicationViewStates">
                                    <VisualState x:Name="FullSize"/>
                                    <VisualState x:Name="Compact">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="TextLabel" Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentViewbox" Storyboard.TargetProperty="Margin">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource AppBarButtonContentViewboxCompactMargin}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="LabelOnRight">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentViewbox" Storyboard.TargetProperty="Margin">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource AppBarButtonContentViewboxMargin}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentRoot" Storyboard.TargetProperty="MinHeight">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AppBarThemeCompactHeight}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="TextLabel" Storyboard.TargetProperty="(Grid.Row)">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="0"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="TextLabel" Storyboard.TargetProperty="(Grid.Column)">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="1"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="TextLabel" Storyboard.TargetProperty="TextAlignment">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="Left"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="TextLabel" Storyboard.TargetProperty="Margin">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource AppBarButtonTextLabelOnRightMargin}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="LabelCollapsed">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentRoot" Storyboard.TargetProperty="MinHeight">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AppBarThemeCompactHeight}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="TextLabel" Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentViewbox" Storyboard.TargetProperty="Margin">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource AppBarButtonContentViewboxCompactMargin}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Overflow">
                                        <VisualState.Setters>
                                            <Setter Target="ContentRoot.MinHeight" Value="0"/>
                                            <Setter Target="ContentViewbox.Visibility" Value="Collapsed"/>
                                            <Setter Target="TextLabel.Visibility" Value="Collapsed"/>
                                            <Setter Target="OverflowTextLabel.Visibility" Value="Visible"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="OverflowWithToggleButtons">
                                        <VisualState.Setters>
                                            <Setter Target="ContentRoot.MinHeight" Value="0"/>
                                            <Setter Target="ContentViewbox.Visibility" Value="Collapsed"/>
                                            <Setter Target="TextLabel.Visibility" Value="Collapsed"/>
                                            <Setter Target="OverflowTextLabel.Visibility" Value="Visible"/>
                                            <Setter Target="OverflowTextLabel.Margin" Value="38,0,12,0"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="OverflowWithMenuIcons">
                                        <VisualState.Setters>
                                            <Setter Target="ContentRoot.MinHeight" Value="0"/>
                                            <Setter Target="ContentViewbox.HorizontalAlignment" Value="Left"/>
                                            <Setter Target="ContentViewbox.VerticalAlignment" Value="Center"/>
                                            <Setter Target="ContentViewbox.Width" Value="16"/>
                                            <Setter Target="ContentViewbox.Height" Value="16"/>
                                            <Setter Target="ContentViewbox.Margin" Value="12,0,12,0"/>
                                            <Setter Target="TextLabel.Visibility" Value="Collapsed"/>
                                            <Setter Target="OverflowTextLabel.Visibility" Value="Visible"/>
                                            <Setter Target="OverflowTextLabel.Margin" Value="38,0,12,0"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="OverflowWithToggleButtonsAndMenuIcons">
                                        <VisualState.Setters>
                                            <Setter Target="ContentRoot.MinHeight" Value="0"/>
                                            <Setter Target="ContentViewbox.HorizontalAlignment" Value="Left"/>
                                            <Setter Target="ContentViewbox.VerticalAlignment" Value="Center"/>
                                            <Setter Target="ContentViewbox.Width" Value="16"/>
                                            <Setter Target="ContentViewbox.Height" Value="16"/>
                                            <Setter Target="ContentViewbox.Margin" Value="38,0,12,0"/>
                                            <Setter Target="TextLabel.Visibility" Value="Collapsed"/>
                                            <Setter Target="OverflowTextLabel.Visibility" Value="Visible"/>
                                            <Setter Target="OverflowTextLabel.Margin" Value="76,0,12,0"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal">
                                        <Storyboard>
                                            <PointerUpThemeAnimation Storyboard.TargetName="OverflowTextLabel"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="PointerOver">
                                        <VisualState.Setters>
                                            <Setter Target="Root.(RevealBrush.State)" Value="PointerOver"/>
                                            <Setter Target="Root.Background" Value="{ThemeResource AppBarButtonRevealBackgroundPointerOver}"/>
                                            <Setter Target="Border.BorderBrush" Value="{ThemeResource AppBarButtonRevealBorderBrushPointerOver}"/>
                                            <Setter Target="Content.Foreground" Value="{ThemeResource AppBarButtonForegroundPointerOver}"/>
                                            <Setter Target="TextLabel.Foreground" Value="{ThemeResource AppBarButtonForegroundPointerOver}"/>
                                            <Setter Target="OverflowTextLabel.Foreground" Value="{ThemeResource AppBarButtonForegroundPointerOver}"/>
                                        </VisualState.Setters>
                                        <Storyboard>
                                            <PointerUpThemeAnimation Storyboard.TargetName="OverflowTextLabel"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <VisualState.Setters>
                                            <Setter Target="Root.(RevealBrush.State)" Value="Pressed"/>
                                            <Setter Target="Root.Background" Value="{ThemeResource AppBarButtonRevealBackgroundPressed}"/>
                                            <Setter Target="Border.BorderBrush" Value="{ThemeResource AppBarButtonRevealBorderBrushPressed}"/>
                                            <Setter Target="Content.Foreground" Value="{ThemeResource AppBarButtonForegroundPressed}"/>
                                            <Setter Target="TextLabel.Foreground" Value="{ThemeResource AppBarButtonForegroundPressed}"/>
                                            <Setter Target="OverflowTextLabel.Foreground" Value="{ThemeResource AppBarButtonForegroundPressed}"/>
                                        </VisualState.Setters>
                                        <Storyboard>
                                            <PointerDownThemeAnimation Storyboard.TargetName="OverflowTextLabel"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <VisualState.Setters>
                                            <Setter Target="Root.Background" Value="{ThemeResource AppBarButtonRevealBackgroundDisabled}"/>
                                            <Setter Target="Border.BorderBrush" Value="{ThemeResource AppBarButtonRevealBorderBrushDisabled}"/>
                                            <Setter Target="Content.Foreground" Value="{ThemeResource AppBarButtonForegroundDisabled}"/>
                                            <Setter Target="TextLabel.Foreground" Value="{ThemeResource AppBarButtonForegroundDisabled}"/>
                                            <Setter Target="OverflowTextLabel.Foreground" Value="{ThemeResource AppBarButtonForegroundDisabled}"/>
                                            <Setter Target="KeyboardAcceleratorTextLabel.Foreground" Value="{ThemeResource AppBarButtonKeyboardAcceleratorTextForegroundDisabled}"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="OverflowNormal">
                                        <Storyboard>
                                            <PointerUpThemeAnimation Storyboard.TargetName="ContentRoot"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="OverflowPointerOver">
                                        <VisualState.Setters>
                                            <Setter Target="Root.Background" Value="{ThemeResource AppBarButtonRevealBackgroundPointerOver}"/>
                                            <Setter Target="Border.BorderBrush" Value="{ThemeResource AppBarButtonRevealBorderBrushPointerOver}"/>
                                            <Setter Target="Content.Foreground" Value="{ThemeResource AppBarButtonForegroundPointerOver}"/>
                                            <Setter Target="TextLabel.Foreground" Value="{ThemeResource AppBarButtonForegroundPointerOver}"/>
                                            <Setter Target="OverflowTextLabel.Foreground" Value="{ThemeResource AppBarButtonForegroundPointerOver}"/>
                                            <Setter Target="KeyboardAcceleratorTextLabel.Foreground" Value="{ThemeResource AppBarButtonKeyboardAcceleratorTextForegroundPointerOver}"/>
                                        </VisualState.Setters>
                                        <Storyboard>
                                            <PointerUpThemeAnimation Storyboard.TargetName="ContentRoot"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="OverflowPressed">
                                        <VisualState.Setters>
                                            <Setter Target="Root.Background" Value="{ThemeResource AppBarButtonRevealBackgroundPressed}"/>
                                            <Setter Target="Border.BorderBrush" Value="{ThemeResource AppBarButtonRevealBorderBrushPressed}"/>
                                            <Setter Target="Content.Foreground" Value="{ThemeResource AppBarButtonForegroundPressed}"/>
                                            <Setter Target="TextLabel.Foreground" Value="{ThemeResource AppBarButtonForegroundPressed}"/>
                                            <Setter Target="OverflowTextLabel.Foreground" Value="{ThemeResource AppBarButtonForegroundPressed}"/>
                                            <Setter Target="KeyboardAcceleratorTextLabel.Foreground" Value="{ThemeResource AppBarButtonKeyboardAcceleratorTextForegroundPressed}"/>
                                        </VisualState.Setters>
                                        <Storyboard>
                                            <PointerDownThemeAnimation Storyboard.TargetName="ContentRoot"/>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="InputModeStates">
                                    <VisualState x:Name="InputModeDefault"/>
                                    <VisualState x:Name="TouchInputMode">
                                        <VisualState.Setters>
                                            <Setter Target="OverflowTextLabel.Padding" Value="{StaticResource AppBarButtonOverflowTextTouchMargin}"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="GameControllerInputMode">
                                        <VisualState.Setters>
                                            <Setter Target="OverflowTextLabel.Padding" Value="{StaticResource AppBarButtonOverflowTextTouchMargin}"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="KeyboardAcceleratorTextVisibility">
                                    <VisualState x:Name="KeyboardAcceleratorTextCollapsed"/>
                                    <VisualState x:Name="KeyboardAcceleratorTextVisible">
                                        <VisualState.Setters>
                                            <Setter Target="KeyboardAcceleratorTextLabel.Visibility" Value="Visible"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Grid Height="50" Width="50" x:Name="ContentRoot" MinHeight="50" Margin="0,0">
                                
                                
                                <Viewbox x:Name="ContentViewbox" AutomationProperties.AccessibilityView="Raw" HorizontalAlignment="Stretch" Height="16" Margin="{StaticResource AppBarButtonContentViewboxCollapsedMargin}">
                                    <ContentPresenter x:Name="Content" Content="{TemplateBinding Icon}" Foreground="{TemplateBinding Foreground}"/>
                                </Viewbox>
                                <TextBlock x:Name="TextLabel" AutomationProperties.AccessibilityView="Raw" FontFamily="{TemplateBinding FontFamily}" Foreground="{TemplateBinding Foreground}" FontSize="22" Margin="2" Grid.Row="1" Text="{TemplateBinding Label}" TextWrapping="Wrap" TextAlignment="Center" Grid.RowSpan="2"/>
                                <TextBlock x:Name="OverflowTextLabel" AutomationProperties.AccessibilityView="Raw" FontFamily="{TemplateBinding FontFamily}" Foreground="{TemplateBinding Foreground}" FontSize="15" HorizontalAlignment="Stretch" Margin="12,0,12,0" Padding="{StaticResource AppBarButtonOverflowTextLabelPadding}" Text="{TemplateBinding Label}" TextTrimming="Clip" TextWrapping="NoWrap" TextAlignment="Left" VerticalAlignment="Center" Visibility="Collapsed"/>
                                <TextBlock x:Name="KeyboardAcceleratorTextLabel" AutomationProperties.AccessibilityView="Raw" Grid.Column="1" Foreground="{ThemeResource AppBarButtonKeyboardAcceleratorTextForeground}" HorizontalAlignment="Right" MinWidth="{Binding TemplateSettings.KeyboardAcceleratorTextMinWidth, RelativeSource={RelativeSource Mode=TemplatedParent}}" Margin="24,0,12,0" Style="{ThemeResource CaptionTextBlockStyle}" Text="{TemplateBinding KeyboardAcceleratorTextOverride}" VerticalAlignment="Center" Visibility="Collapsed"/>
                                <Border x:Name="Border" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="{TemplateBinding CornerRadius}"  Margin="0,0"/>
                            </Grid>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>



    </Page.Resources>
    <Grid>

        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState>
                    <VisualState.StateTriggers>
                        <!--VisualState to be triggered when window width is >=0 effective pixels.-->
                        <AdaptiveTrigger MinWindowHeight="0"/>
                    </VisualState.StateTriggers>

                    <VisualState.Setters>

                    </VisualState.Setters>
                </VisualState>

                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowHeight="1080"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>

                    </VisualState.Setters>
                </VisualState>


            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>


        <Grid Tag="{x:Bind Tag, Mode=OneWay}" Background="{StaticResource ApplicationPageBackgroundThemeBrush}" Padding="50,0,50,0" VerticalAlignment="Stretch">
            <Grid.RowDefinitions>
                <RowDefinition Height="20*"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="80*"/>
            </Grid.RowDefinitions>
            <TextBlock Name="EmptyText" Visibility="{x:Bind local2:ItemViewModel.TextState.isVisible, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Left" Text="This folder is empty." TextWrapping="Wrap" VerticalAlignment="Top" Margin="425,135.2,0,0" Canvas.ZIndex="5" Grid.Row="2"/>
            <Grid DataContext="{Binding BackObject}" VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
               
                    <StackPanel Orientation="Horizontal" VerticalAlignment="Bottom" Margin="-15,0,0,0">
                        <StackPanel Orientation="Vertical" Margin="2">
                        <AppBarButton LabelPosition="Collapsed" Style="{ThemeResource AppBarButtonFixedStyle}"   HorizontalAlignment="Center"  x:FieldModifier="public" IsEnabled="{x:Bind local2:ItemViewModel.BS.isEnabled, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" x:Name="Back"  VerticalAlignment="Center" Height="50" Width="50">
                            
                            <AppBarButton.ContentTemplate>
                                <DataTemplate>
                                    <TextBlock Text="&#xE76B;" FontFamily="Segoe MDL2 Assets"  FontSize="20" HorizontalAlignment="Center" VerticalAlignment="Center" />
                                </DataTemplate>
                            </AppBarButton.ContentTemplate>
                        </AppBarButton>
                            <TextBlock TextWrapping="WrapWholeWords" VerticalAlignment="Bottom" HorizontalAlignment="Center" TextAlignment="Center" Text="Back" Width="60"/>
                        </StackPanel>
                        <StackPanel Orientation="Vertical"  Margin="2">
                            <Grid HorizontalAlignment="Center" DataContext="{Binding ForwardObject}" VerticalAlignment="Center">
                            <AppBarButton LabelPosition="Collapsed" Style="{ThemeResource AppBarButtonFixedStyle}"  IsEnabled="{x:Bind local2:ItemViewModel.FS.isEnabled, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" x:Name="Forward" FontFamily="Segoe MDL2 Assets"  FontSize="20" VerticalAlignment="Top" Height="50" Width="50" HorizontalAlignment="Left">
                                <AppBarButton.ContentTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="&#xE76C;" FontFamily="Segoe MDL2 Assets"  FontSize="20" HorizontalAlignment="Center" VerticalAlignment="Center" />
                                    </DataTemplate>
                                </AppBarButton.ContentTemplate>
                            </AppBarButton>
                            </Grid>
                            <TextBlock TextWrapping="WrapWholeWords" VerticalAlignment="Bottom" TextAlignment="Center" HorizontalAlignment="Center" Text="Forward" Width="60"/>
                        </StackPanel>
                        <StackPanel Orientation="Vertical"  Margin="2">
                        <AppBarButton LabelPosition="Collapsed" HorizontalAlignment="Center" x:Name="Refresh"  Style="{ThemeResource AppBarButtonFixedStyle}" FontFamily="Segoe MDL2 Assets" FontSize="20" VerticalAlignment="Center" Width="50" Height="50">
                            <AppBarButton.ContentTemplate>
                                <DataTemplate>
                                    <TextBlock Text="&#xE72C;" FontFamily="Segoe MDL2 Assets"  FontSize="20" HorizontalAlignment="Center" VerticalAlignment="Center" />
                                </DataTemplate>
                            </AppBarButton.ContentTemplate>
                        </AppBarButton>
                        <TextBlock TextWrapping="WrapWholeWords" VerticalAlignment="Bottom"  Text="Refresh" HorizontalAlignment="Center" TextAlignment="Center" Width="60"/>
                        </StackPanel>
                        <StackPanel Orientation="Vertical"  Margin="2">
                        <AppBarButton LabelPosition="Collapsed" HorizontalAlignment="Center" x:Name="AddItem"  Style="{ThemeResource AppBarButtonFixedStyle}" Content="&#xE710;" FontFamily="Segoe MDL2 Assets" FontSize="20" VerticalAlignment="Center" Width="50" Height="50" />
                            <TextBlock TextWrapping="WrapWholeWords" VerticalAlignment="Bottom"  Text="Add Item" HorizontalAlignment="Center" TextAlignment="Center" Width="60"/>
                        </StackPanel>
                        <StackPanel Orientation="Vertical" Margin="2">
                        <AppBarButton LabelPosition="Collapsed" IsEnabled="{x:Bind local3:Interaction.PS.isEnabled, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Center" x:Name="Paste"  Style="{ThemeResource AppBarButtonFixedStyle}"  Content="&#xE77F;" FontFamily="Segoe MDL2 Assets" FontSize="20" VerticalAlignment="Center" Width="50" Height="50" />
                            <TextBlock TextWrapping="WrapWholeWords" VerticalAlignment="Bottom"  Text="Paste" HorizontalAlignment="Center" TextAlignment="Center" Width="60"/>
                        </StackPanel>
                        <StackPanel Orientation="Vertical" Margin="2">
                        <AppBarButton LabelPosition="Collapsed" HorizontalAlignment="Center" x:Name="GetPath"  Style="{ThemeResource AppBarButtonFixedStyle}"  Content="&#xF271;" FontFamily="Segoe MDL2 Assets" FontSize="20" VerticalAlignment="Center" Width="50" Height="50" />
                            <TextBlock TextWrapping="WrapWholeWords" VerticalAlignment="Bottom"  Text="Copy Path" HorizontalAlignment="Center" TextAlignment="Center" Width="60"/>
                        </StackPanel>
                        <StackPanel Orientation="Vertical" Margin="2">
                        <AppBarButton LabelPosition="Collapsed" HorizontalAlignment="Center" x:Name="ViewMode"  Style="{ThemeResource AppBarButtonFixedStyle}"   Content="&#xF0E2;" FontFamily="Segoe MDL2 Assets" FontSize="20" VerticalAlignment="Center" Width="50" Height="50" />
                            <TextBlock VerticalAlignment="Bottom" TextWrapping="WrapWholeWords" Text="Layout Mode" HorizontalAlignment="Center" TextAlignment="Center" Width="60"/>
                        </StackPanel>
                    </StackPanel>

                    
            </Grid>

            <ScrollViewer Padding="5" HorizontalScrollMode="Auto" HorizontalScrollBarVisibility="Auto"  HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Grid.Row="1" >
                <TextBlock x:Name="VisiblePath" Text="{x:Bind Mode=TwoWay, Path=local:GenericFileBrowser.P.path, UpdateSourceTrigger=PropertyChanged}" FontFamily="Segoe UI Black" FontWeight="Bold" FontSize="32" ScrollViewer.VerticalScrollBarVisibility="Auto" ScrollViewer.HorizontalScrollBarVisibility="Auto" VerticalAlignment="Top" Margin="0,0,0,0" Grid.Row="1"/>
            </ScrollViewer>

            <Grid Grid.Row="2" HorizontalAlignment="Left" Margin="0,0,0,0">

                <controls:DataGrid CellEditEnded="AllView_CellEditEnded" FocusVisualPrimaryThickness="0" SelectionMode="Extended" IsDoubleTapEnabled="True" x:FieldModifier="public" x:Name="AllView" Drop="AllView_DropAsync"  AutoGenerateColumns="False" CanDrag="False" AllowDrop="True" DragOver="AllView_DragOver" IsRightTapEnabled="True" CanUserReorderColumns="False" IsReadOnly="False"  ItemsSource="{x:Bind local2:ItemViewModel.FilesAndFolders}"  Margin="0,0,0,0" Padding="0, 0, 0, 0" HorizontalAlignment="Left">

                    <controls:DataGrid.Resources>
                        <MenuFlyout x:Name="HeaderRightClickMenu" x:Key="HeaderRightClickFlyout">
                            <MenuFlyoutItem Text="Edit Columns" Name="EditColumn">
                                <MenuFlyoutItem.Icon>
                                    <FontIcon Glyph="&#xE70F;"/>
                                </MenuFlyoutItem.Icon>
                            </MenuFlyoutItem>
                            <MenuFlyoutItem Text="Size All Columns to Fit" Name="FitColumns">
                                <MenuFlyoutItem.Icon>
                                    <FontIcon Glyph="&#xE9A6;"/>
                                </MenuFlyoutItem.Icon>
                            </MenuFlyoutItem>
                        </MenuFlyout>

                        <MenuFlyout x:Name="RightClickContextMenu"  x:Key="RightClickFlyout">
                            <MenuFlyout.Items>
                                <MenuFlyoutItem Text="Open" Name="OpenItem">
                                    <MenuFlyoutItem.Icon>
                                        <FontIcon Glyph="&#xE7AC;"/>
                                    </MenuFlyoutItem.Icon>
                                </MenuFlyoutItem>

                                <MenuFlyoutItem Text="Share" Name="ShareItem">
                                    <MenuFlyoutItem.Icon>
                                        <FontIcon Glyph="&#xE72D;"/>
                                    </MenuFlyoutItem.Icon>
                                </MenuFlyoutItem>

                                <MenuFlyoutSeparator/>
                                <MenuFlyoutItem Text="Delete" Name="DeleteItem" >
                                    <MenuFlyoutItem.Icon>
                                        <FontIcon Glyph="&#xE74D;"/>
                                    </MenuFlyoutItem.Icon>
                                </MenuFlyoutItem>
                                <MenuFlyoutItem Text="Rename" Name="RenameItem" >
                                    <MenuFlyoutItem.Icon>
                                        <FontIcon Glyph="&#xE8AC;"/>
                                    </MenuFlyoutItem.Icon>
                                </MenuFlyoutItem>
                                <MenuFlyoutSeparator/>
                                <MenuFlyoutItem Text="Cut" Name="CutItem" >
                                    <MenuFlyoutItem.Icon>
                                        <FontIcon Glyph="&#xE8C6;"/>
                                    </MenuFlyoutItem.Icon>
                                </MenuFlyoutItem>
                                <MenuFlyoutItem Text="Copy" Name="CopyItem" >
                                    <MenuFlyoutItem.Icon>
                                        <FontIcon Glyph="&#xE8C8;"/>
                                    </MenuFlyoutItem.Icon>
                                </MenuFlyoutItem>

                                <MenuFlyoutSeparator/>
                                <MenuFlyoutItem Text="Properties" Name="PropertiesItem">
                                    <MenuFlyoutItem.Icon>
                                        <FontIcon Glyph="&#xE946;"/>
                                    </MenuFlyoutItem.Icon>
                                </MenuFlyoutItem>
                            </MenuFlyout.Items>

                        </MenuFlyout>
                    </controls:DataGrid.Resources>

                    <controls:DataGrid.CellStyle>
                        <Style TargetType="controls:DataGridCell">
                            <Setter Property="BorderThickness" Value="0"/>
                            <Setter Property="FocusVisualPrimaryThickness" Value="0"/>
                            <Setter Property="FocusVisualSecondaryThickness" Value="0"/>
                        </Style>
                    </controls:DataGrid.CellStyle>

                    <controls:DataGrid.Columns>
                        <controls:DataGridTemplateColumn IsReadOnly="True">
                            <controls:DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <Grid  Margin="15, 0, 0, 0">
                                        <FontIcon Visibility="{Binding FolderImg}" Glyph="&#xE8D5;" FontFamily="Segoe MDL2 Assets" Foreground="#ffe793"/>
                                        <Image Visibility="{Binding FileIconVis}" Height="20" Width="20" Source="{Binding FileImg}" Stretch="UniformToFill" />
                                    </Grid>
                                </DataTemplate>
                            </controls:DataGridTemplateColumn.CellTemplate>
                        </controls:DataGridTemplateColumn>
                        <controls:DataGridTextColumn  Header="Name" Width="385" Binding="{Binding FileName}" Tag="Name"/>
                        <controls:DataGridTextColumn IsReadOnly="True" Header="Date modified" Width="300" Binding="{Binding FileDate}" Tag="Date"/>
                        <controls:DataGridTextColumn IsReadOnly="True" Header="Type" Width="150" Binding="{Binding FileExtension}" Tag="Type"/>
                        <controls:DataGridTextColumn IsReadOnly="True" Header="Size" Binding="{Binding FileSize}" Tag="Size"/>
                    </controls:DataGrid.Columns>

                </controls:DataGrid>



            </Grid>
            <Grid Visibility="Collapsed" Background="{StaticResource Accent}" VerticalAlignment="Top" Height="30" Margin="50,907.2,50,0" Grid.Row="2"/>

            <controls:DropShadowPanel BorderBrush="White" BorderThickness="1" Name="FileConflictBox" Visibility="{x:Bind local2:ItemViewModel.ConflictUIVisibility.isVisible, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Center" VerticalAlignment="Top" Width="500" Height="225" Margin="0,185.2,0,0" Grid.Row="2" Canvas.ZIndex="3">
                <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}" Padding="25">
                    <Rectangle Fill="{ThemeResource ApplicationPageBackgroundThemeBrush}" Stroke="White" StrokeThickness="1" Width="500" Height="225" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    <StackPanel>
                        <TextBlock Name="ConflictLargeHeader" Text="{x:Bind local2:ItemViewModel.ConflictBoxHeader.Header, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" FontSize="22"/>
                        <TextBlock Name="ConflictSmallHeader" TextWrapping="WrapWholeWords" Text="{x:Bind local2:ItemViewModel.ConflictBoxSubHeader.SubHeader, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        <StackPanel Orientation="Horizontal" Padding="0,90,0,0">
                            <Button Name="ReplaceChoice" Width="200" Margin="0,0,50,0" Content="Replace"/>
                            <Button Name="SkipChoice" Width="200" Content="Skip"/>
                        </StackPanel>
                    </StackPanel>
                </Grid>
            </controls:DropShadowPanel>

            <controls:DropShadowPanel BorderBrush="White" BorderThickness="1" Name="CollisionBox" Visibility="{x:Bind local2:ItemViewModel.CollisionUIVisibility.isVisible, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Center" VerticalAlignment="Top" Width="500" Height="275" Margin="0,185.2,0,0" Grid.Row="2" Canvas.ZIndex="3">
                <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}" Padding="25">
                    <Rectangle Fill="{ThemeResource ApplicationPageBackgroundThemeBrush}" Stroke="White" StrokeThickness="1" Width="500" Height="275" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    <StackPanel>
                        <TextBlock Name="LargeHeader" Text="{x:Bind local2:ItemViewModel.CollisionBoxHeader.Header, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" FontSize="22"/>
                        <TextBlock Name="SmallHeader" TextWrapping="WrapWholeWords" Text="{x:Bind local2:ItemViewModel.CollisionBoxSubHeader.SubHeader, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        <ListView IsItemClickEnabled="True" Name="CollisonLV">
                            <ListViewItem Name="ReplaceAll">
                                <StackPanel Orientation="Horizontal">
                                    <SymbolIcon Symbol="Accept" Margin="0,0,15,0"/>
                                    <TextBlock Text="Replace all items with the same name"/>
                                </StackPanel>
                            </ListViewItem>
                            <ListViewItem Name="SkipAll">
                                <StackPanel Orientation="Horizontal">
                                    <SymbolIcon Symbol="Forward"  Margin="0,0,15,0"/>
                                    <TextBlock Text="Skip these items"/>
                                </StackPanel>
                            </ListViewItem>
                            <ListViewItem Name="PromptForAll">
                                <StackPanel Orientation="Horizontal">
                                    <FontIcon Glyph="&#xE9D5;" Margin="0,0,15,0"/>
                                    <TextBlock Text="Prompt me for each item"/>
                                </StackPanel>
                            </ListViewItem>


                        </ListView>
                    </StackPanel>
                </Grid>
            </controls:DropShadowPanel>

            <controls:DropShadowPanel x:Name="ProgressBox" Visibility="{x:Bind local2:ItemViewModel.PVIS.isVisible, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Center" VerticalAlignment="Top" Width="500" Height="225" Margin="0,185.2,0,0" Grid.Row="2">
                <Grid>
                    <Rectangle Fill="{ThemeResource ApplicationPageBackgroundThemeBrush}" Stroke="White" Width="500" Height="225" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    <TextBlock Text="{x:Bind local2:ItemViewModel.PUIH.Header, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="25,0,0,150" FontSize="22"/>
                    <Button Content="{x:Bind local2:ItemViewModel.ButtonText.buttonText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Right" Margin="0,0,25,25" VerticalAlignment="Bottom" Width="175" Click="Button_Click"/>
                    <TextBlock Text="{x:Bind local2:ItemViewModel.PUIP.Path, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="25,0,0,85" FontSize="14"/>
                    <ProgressBar Name="pbar"  Value="{x:Bind local2:ItemViewModel.PROGRESSPER.prog, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Center" Height="8" HorizontalAlignment="Center" Width="450" Margin="0,50,0,0"/>
                </Grid>
            </controls:DropShadowPanel>
        </Grid>





    </Grid>


</Page>