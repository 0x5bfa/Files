<Page
    x:Class="Files.GenericFileBrowser"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="using:Microsoft.Toolkit.Uwp.UI.Controls"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:local="using:Files"
    xmlns:Core="using:Microsoft.Xaml.Interactions.Core"
    mc:Ignorable="d" ScrollViewer.HorizontalScrollBarVisibility="Hidden" ScrollViewer.VerticalScrollBarVisibility="Auto">

    <Page.Resources>
        <AcrylicBrush x:Key="RegAcrylic" BackgroundSource="HostBackdrop" TintColor="White" TintOpacity="0.7" FallbackColor="{StaticResource SystemChromeMediumColor}"/>
        <AcrylicBrush x:Key="InAppAcrylic" BackgroundSource="Backdrop" TintColor="{StaticResource SystemAccentColor}" TintOpacity="0.6" FallbackColor="{ThemeResource SystemChromeMediumColor}"/>
        <AcrylicBrush x:Key="LightAcrylic" BackgroundSource="HostBackdrop" TintColor="White" TintOpacity="0.8" FallbackColor="{StaticResource SystemChromeMediumColor}"/>
        <SolidColorBrush x:Key="GreyFallback" Color="{StaticResource SystemChromeMediumColor}"/>
        <SolidColorBrush x:Key="Accent" Color="{StaticResource SystemAccentColor}"/>
        <Storyboard x:Name="PointerHoverButton1">
            <FadeOutThemeAnimation Storyboard.TargetName="Shadow1"/>

        </Storyboard>
        <local:BackState x:Key="BackObject"/>
        <local:FowardState x:Key="FowardObject"/>
        <Style x:Key="FluentHistoryButton" TargetType="Button">
            <Setter Property="Background" Value="{ThemeResource ButtonRevealBackground}"/>
            <Setter Property="Foreground" Value="{ThemeResource ButtonForeground}"/>
            <Setter Property="BorderBrush" Value="{ThemeResource ButtonRevealBorderBrush}"/>
            <Setter Property="BorderThickness" Value="{ThemeResource ButtonRevealBorderThemeThickness}"/>
            <Setter Property="Padding" Value="8,4,8,4"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}"/>
            <Setter Property="FontWeight" Value="Normal"/>
            <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}"/>
            <Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}"/>
            <Setter Property="FocusVisualMargin" Value="-3"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid x:Name="RootGrid" Background="{TemplateBinding Background}">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal">
                                        <Storyboard>
                                            <PointerUpThemeAnimation Storyboard.TargetName="RootGrid"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="PointerOver">
                                        <VisualState.Setters>
                                            <Setter Target="RootGrid.(RevealBrush.State)" Value="PointerOver"/>
                                            <Setter Target="RootGrid.Background" Value="{ThemeResource ButtonRevealBackgroundPointerOver}"/>
                                            <Setter Target="ContentPresenter.BorderBrush" Value="{ThemeResource ButtonRevealBorderBrushPointerOver}"/>
                                            <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ButtonForegroundPointerOver}"/>
                                        </VisualState.Setters>
                                        <Storyboard>
                                            <PointerUpThemeAnimation Storyboard.TargetName="RootGrid"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <VisualState.Setters>
                                            <Setter Target="RootGrid.(RevealBrush.State)" Value="Pressed"/>
                                            <Setter Target="RootGrid.Background" Value="{ThemeResource ButtonRevealBackgroundPressed}"/>
                                            <Setter Target="ContentPresenter.BorderBrush" Value="{ThemeResource ButtonRevealBorderBrushPressed}"/>
                                            <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ButtonForegroundPressed}"/>
                                        </VisualState.Setters>
                                        <Storyboard>
                                            <PointerDownThemeAnimation Storyboard.TargetName="RootGrid"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <VisualState.Setters>
                                            <Setter Target="RootGrid.Background" Value="{ThemeResource ButtonRevealBackgroundDisabled}"/>
                                            <Setter Target="ContentPresenter.BorderBrush" Value="{ThemeResource ButtonRevealBorderBrushDisabled}"/>
                                            <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ButtonForegroundDisabled}"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <ContentPresenter x:Name="ContentPresenter" AutomationProperties.AccessibilityView="Raw" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentTransitions="{TemplateBinding ContentTransitions}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>




    </Page.Resources>
    <Grid>

        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState>
                    <VisualState.StateTriggers>
                        <!--VisualState to be triggered when window width is >=0 effective pixels.-->
                        <AdaptiveTrigger MinWindowHeight="0"/>
                    </VisualState.StateTriggers>

                    <VisualState.Setters>

                    </VisualState.Setters>
                </VisualState>

                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowHeight="1080"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>

                    </VisualState.Setters>
                </VisualState>


            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>


        <Grid Tag="{x:Bind Tag, Mode=OneWay}" Background="White" Margin="0,0,0,0">
            <TextBlock Name="EmptyText" Visibility="{x:Bind local:ItemViewModel.TextState.isVisible, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Left" Text="This folder is empty." TextWrapping="Wrap" VerticalAlignment="Top" Margin="475,300,0,0" Canvas.ZIndex="5"/>
            <Grid DataContext="{Binding BackObject}" HorizontalAlignment="Stretch" Height="200" VerticalAlignment="Top">
                <Button BorderThickness="1.5" Style="{ThemeResource FluentHistoryButton}" x:FieldModifier="public" IsEnabled="{x:Bind local:ItemViewModel.BS.isEnabled, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Click="Back_Click" x:Name="Back" Foreground="Black" Content="&#xE76B;" FontFamily="Segoe MDL2 Assets" Background="#33FFFFFF" FontSize="20" Margin="40,52,0,0" VerticalAlignment="Top" Height="50" Width="50">

                </Button>
                <Grid DataContext="{Binding FowardObject}">
                    <Button BorderThickness="1.5" Style="{ThemeResource ButtonRevealStyle}" IsEnabled="{x:Bind local:ItemViewModel.FS.isEnabled, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" x:Name="Foward" Foreground="Black" Content="&#xE76C;" FontFamily="Segoe MDL2 Assets" Background="#33FFFFFF"  Margin="95,52,0,0" FontSize="20" VerticalAlignment="Top" Click="Foward_Click" Height="50" Width="50" HorizontalAlignment="Left"/>
                </Grid>
                <Button x:Name="Refresh" BorderThickness="1.5" Style="{ThemeResource ButtonRevealStyle}" Foreground="Black" Content="&#xE72C;" FontFamily="Segoe MDL2 Assets" Background="#33FFFFFF" FontSize="20" Margin="150,52,0,0" VerticalAlignment="Top" Width="50" Height="50"/>
                <ScrollViewer HorizontalScrollMode="Auto" HorizontalScrollBarVisibility="Auto" Margin="50,126,50,25" HorizontalAlignment="Stretch" VerticalAlignment="Top" >
                    <TextBlock x:Name="VisiblePath" Text="C:\" Margin="0,0,0,0" FontFamily="Segoe UI Black" FontWeight="Bold" FontSize="32" ScrollViewer.VerticalScrollBarVisibility="Auto" ScrollViewer.HorizontalScrollBarVisibility="Auto" VerticalAlignment="Top" HorizontalAlignment="Stretch"></TextBlock>
                </ScrollViewer>

            </Grid>

            <Grid Padding="50,200,50,0">


                <controls:DataGrid IsRightTapEnabled="True" CanUserReorderColumns="False" IsReadOnly="True" x:Name="AllView" SelectionMode="Single" RightTapped="AllView_RightTapped" SelectionChanged="AllView_ItemClick" ItemsSource="{x:Bind ViewModel.FilesAndFolders}" Margin="0,0,0,0" HorizontalAlignment="Left">
                    <controls:DataGrid.Resources>
                        <MenuFlyout x:Name="RightClickContextMenu" x:Key="RightClickFlyout">
                            <MenuFlyout.Items>
                                <MenuFlyoutItem Text="Open" Name="OpenItem" Click="OpenItem_Click">
                                    <MenuFlyoutItem.Icon>
                                        <FontIcon Glyph="&#xE7AC;"/>
                                    </MenuFlyoutItem.Icon>
                                </MenuFlyoutItem>

                                <MenuFlyoutItem Text="Share" Name="ShareItem" Click="ShareItem_Click">
                                    <MenuFlyoutItem.Icon>
                                        <FontIcon Glyph="&#xE72D;"/>
                                    </MenuFlyoutItem.Icon>
                                </MenuFlyoutItem>
                                <MenuFlyoutItem Text="Scan with Windows Defender..." Name="ScanItem" Click="ScanItem_Click">
                                    <MenuFlyoutItem.Icon>
                                        <FontIcon Glyph="&#xE83D;"/>
                                    </MenuFlyoutItem.Icon>
                                </MenuFlyoutItem>
                                <MenuFlyoutSeparator/>
                                <MenuFlyoutItem Text="Delete" Name="DeleteItem" Click="DeleteItem_Click">
                                    <MenuFlyoutItem.Icon>
                                        <FontIcon Glyph="&#xE74D;"/>
                                    </MenuFlyoutItem.Icon>
                                </MenuFlyoutItem>
                                <MenuFlyoutItem Text="Rename" Name="RenameItem" Click="RenameItem_Click">
                                    <MenuFlyoutItem.Icon>
                                        <FontIcon Glyph="&#xE8AC;"/>
                                    </MenuFlyoutItem.Icon>
                                </MenuFlyoutItem>
                                <MenuFlyoutSeparator/>
                                <MenuFlyoutItem Text="Cut" Name="CutItem" Click="CutItem_Click">
                                    <MenuFlyoutItem.Icon>
                                        <FontIcon Glyph="&#xE8C6;"/>
                                    </MenuFlyoutItem.Icon>
                                </MenuFlyoutItem>
                                <MenuFlyoutItem Text="Copy" Name="CopyItem" Click="CopyItem_Click">
                                    <MenuFlyoutItem.Icon>
                                        <FontIcon Glyph="&#xE8C8;"/>
                                    </MenuFlyoutItem.Icon>
                                </MenuFlyoutItem>

                                <MenuFlyoutSeparator/>
                                <MenuFlyoutItem Text="Properties" Name="PropertiesItem">
                                    <MenuFlyoutItem.Icon>
                                        <FontIcon Glyph="&#xE946;"/>
                                    </MenuFlyoutItem.Icon>
                                </MenuFlyoutItem>
                            </MenuFlyout.Items>

                        </MenuFlyout>
                    </controls:DataGrid.Resources>



                    <controls:DataGrid.Columns>
                        <controls:DataGridTemplateColumn>
                            <controls:DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <Grid  Margin="15, 0, 0, 0">
                                        <FontIcon Visibility="{Binding FolderImg}" Glyph="&#xE8D5;" FontFamily="Segoe MDL2 Assets" Foreground="#ffe793"/>
                                        <Image Visibility="{Binding FileIconVis}" Height="20" Width="20" Source="{Binding FileImg}" Stretch="UniformToFill" />
                                    </Grid>
                                </DataTemplate>
                            </controls:DataGridTemplateColumn.CellTemplate>
                        </controls:DataGridTemplateColumn>
                        <controls:DataGridTextColumn Header="Name" Width="385" Binding="{Binding FileName}" Tag="Name"/>
                        <controls:DataGridTextColumn Header="Date modified" Width="300" Binding="{Binding FileDate}" Tag="Date"/>
                        <controls:DataGridTextColumn Header="Type" Width="150" Binding="{Binding FileExtension}" Tag="Type"/>
                        <controls:DataGridTextColumn Header="Size" Binding="{Binding FileSize}" Tag="Size"/>
                    </controls:DataGrid.Columns>

                </controls:DataGrid>



            </Grid>
            <Grid Visibility="Collapsed" Background="{StaticResource Accent}" VerticalAlignment="Bottom" Height="30">

            </Grid>
            <Grid x:Name="ProgressBox" Visibility="{x:Bind local:ItemViewModel.PVIS.isVisible, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Center" VerticalAlignment="Center" Width="500" Height="225">
                <Rectangle Fill="White" Stroke="Blue" Width="500" Height="225" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                <TextBlock Text="{x:Bind local:ItemViewModel.PUIH.Header, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="25,0,0,150" FontSize="22"/>
                <Button Content="Cancel" HorizontalAlignment="Right" Margin="0,0,25,25" VerticalAlignment="Bottom" Width="175"/>
                <TextBlock Text="{x:Bind local:ItemViewModel.PUIP.Path, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="25,0,0,50" FontSize="14"/>
                <ProgressBar Name="pbar"  Value="{x:Bind local:ItemViewModel.PROGRESSPER.prog, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Center" Height="8" HorizontalAlignment="Center" Width="450" Margin="0,50,0,0"/>
            </Grid>
        </Grid>





    </Grid>


</Page>